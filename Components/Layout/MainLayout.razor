@using BlazorForms.Components.Components
@using BlazorForms.Data
@using Microsoft.AspNetCore.Identity
@inherits LayoutComponentBase
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Nav

<div class="page">

    <main>
        <div class="d-flex top-row px-4 justify-content-between align-items-center bg-primary-theme">
            <NavLink class="nav-link" href="/">
                <h3 class="text-primary-theme fw-bold p-0 m-0">BlazorForms</h3>
            </NavLink>
            <div class="d-flex align-items-center ">
                <ThemeSelect></ThemeSelect>
                <CultureSelector/>
                <AuthorizeView>
                    <Authorized>
                        @if (!string.IsNullOrEmpty(UserName))
                        {
                            <span>
                                Welcome, @UserName
                            </span>
                        }
                        <div class="nav-item px-3">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken/>
                                <input type="hidden" name="ReturnUrl"/>
                                <button type="submit" class="btn btn-link">
                                    Sign out
                                </button>
                            </form>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <button class="btn btn-primary" @onclick="NavigateToRegister">Sign up</button>
                        <NavLink class="nav-link" href="Account/Login">
                            Log in
                        </NavLink>
                    </NotAuthorized>
                </AuthorizeView>
            </div>

        </div>

        <article class="content px-4 bg-primary-theme">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code{
    [CascadingParameter] private AuthenticationState? Context { get; set; }
    private string? UserName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Context?.User.Identity?.Name != null)
        {
            var user = await UserManager.FindByNameAsync(Context.User.Identity.Name);
            if (user != null)
            {
                UserName = user.UserName;
            }
        }
    }

    void NavigateToRegister() => Nav.NavigateTo("Account/Register");
}